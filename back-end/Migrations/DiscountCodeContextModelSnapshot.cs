// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using back_end.Models;

namespace back_end.Migrations
{
    [DbContext(typeof(DiscountCodeContext))]
    partial class DiscountCodeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("back_end.Models.CustomerGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("CustomerGroups");
                });

            modelBuilder.Entity("back_end.Models.DiscountCode", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmountUsed");

                    b.Property<int>("ApplyWith");

                    b.Property<string>("Code");

                    b.Property<int>("CustomerGroup");

                    b.Property<bool>("CustomerUsageLimits");

                    b.Property<DateTime>("EndTime");

                    b.Property<decimal>("MinValue");

                    b.Property<int>("NumberUsageLimits");

                    b.Property<int>("PromotionOption");

                    b.Property<decimal>("PromotionValue");

                    b.Property<DateTime>("StartTime");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("DiscountCodes");
                });

            modelBuilder.Entity("back_end.Models.DiscountCodeCustomerGroup", b =>
                {
                    b.Property<long>("Id");

                    b.Property<long>("DiscountCodeId");

                    b.HasKey("Id", "DiscountCodeId");

                    b.HasIndex("DiscountCodeId");

                    b.ToTable("DiscountCodeCustomerGroup");
                });

            modelBuilder.Entity("back_end.Models.DiscountCodeProduct", b =>
                {
                    b.Property<long>("Id");

                    b.Property<long>("DiscountCodeId");

                    b.HasKey("Id", "DiscountCodeId");

                    b.HasIndex("DiscountCodeId");

                    b.ToTable("DiscountCodeProduct");
                });

            modelBuilder.Entity("back_end.Models.DiscountCodeProductGroup", b =>
                {
                    b.Property<long>("Id");

                    b.Property<long>("DiscountCodeId");

                    b.HasKey("Id", "DiscountCodeId");

                    b.HasIndex("DiscountCodeId");

                    b.ToTable("DiscountCodeProductGroup");
                });

            modelBuilder.Entity("back_end.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("back_end.Models.ProductGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ProductGroups");
                });

            modelBuilder.Entity("back_end.Models.DiscountCodeCustomerGroup", b =>
                {
                    b.HasOne("back_end.Models.DiscountCode", "DiscountCode")
                        .WithMany("DiscountCodeCustomerGroups")
                        .HasForeignKey("DiscountCodeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("back_end.Models.CustomerGroup", "CustomerGroup")
                        .WithMany("DiscountCodeCustomerGroups")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("back_end.Models.DiscountCodeProduct", b =>
                {
                    b.HasOne("back_end.Models.DiscountCode", "DiscountCode")
                        .WithMany("DiscountCodeProducts")
                        .HasForeignKey("DiscountCodeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("back_end.Models.Product", "Product")
                        .WithMany("DiscountCodeProducts")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("back_end.Models.DiscountCodeProductGroup", b =>
                {
                    b.HasOne("back_end.Models.DiscountCode", "DiscountCode")
                        .WithMany("DiscountCodeProductGroups")
                        .HasForeignKey("DiscountCodeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("back_end.Models.ProductGroup", "ProductGroup")
                        .WithMany("DiscountCodeProductGroups")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
